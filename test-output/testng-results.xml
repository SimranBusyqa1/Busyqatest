<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="1" passed="0">
  <reporter-output>
    <line>
      <![CDATA[Screen Shot Taken]]>
    </line>
  </reporter-output>
  <suite name="Suite" duration-ms="11887" started-at="2020-07-18T14:55:11 IST" finished-at="2020-07-18T14:55:23 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="11887" started-at="2020-07-18T14:55:11 IST" finished-at="2020-07-18T14:55:23 IST">
      <class name="com.busyqa.test.TestCases.Failed_TC">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String)[pri:0, instance:com.busyqa.test.TestCases.Failed_TC@63440df3]" name="setUp" is-config="true" duration-ms="11310" started-at="2020-07-18T14:55:11 IST" finished-at="2020-07-18T14:55:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[qa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="failed_TC1()[pri:0, instance:com.busyqa.test.TestCases.Failed_TC@63440df3]" name="failed_TC1" duration-ms="99" started-at="2020-07-18T14:55:23 IST" finished-at="2020-07-18T14:55:23 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:751)
at org.testng.Assert.assertEquals(Assert.java:761)
at com.busyqa.test.TestCases.Failed_TC.failed_TC1(Failed_TC.java:32)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Screen Shot Taken]]>
            </line>
          </reporter-output>
        </test-method> <!-- failed_TC1 -->
        <test-method status="PASS" signature="endTest()[pri:0, instance:com.busyqa.test.TestCases.Failed_TC@63440df3]" name="endTest" is-config="true" duration-ms="0" started-at="2020-07-18T14:55:23 IST" finished-at="2020-07-18T14:55:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- com.busyqa.test.TestCases.Failed_TC -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
